<!-- mission file for GADEN player -->

<launch>  
    
    <arg name="scenario" default="10x6_central_obstacle" />
    <arg name="simulation" default="1ms" />
    <arg name="source_location_x" default="0.50" />
    <arg name="source_location_y" default="3.00" />
    <arg name="source_location_z" default="0.50" />
    
     ### NODE environment (for RVIZ visualization) ###
    <node pkg="gaden_environment" exec="environment" name="environment" output="screen">
        <param name="verbose" value="false"/>
        <param name="wait_preprocessing" value="false"/>    	  ### wait for the ok from gaden_preprocessing before running
        <param name="fixed_frame" value="map"/>

        # Plot CAD models (Collada format .dae)
	    <param name="number_of_CAD" value="4"/>
	    
        <param name="CAD_0" value="package://test_env/$(var scenario)/cad_models/10x6_walls.dae"/>
        <param name="CAD_0_color" value="[0.92, 0.96, 0.96]"/>
            
        <param name="CAD_1" value="package://test_env/$(var scenario)/cad_models/10x6_door_left.dae"/>
        <param name="CAD_1_color" value="[0.96, 0.17, 0.3]"/>
            
        <param name="CAD_2" value="package://test_env/$(var scenario)/cad_models/10x6_door_right.dae"/>
        <param name="CAD_2_color" value="[0.96, 0.17, 0.3]"/>

        <param name="CAD_3" value="package://test_env/$(var scenario)/cad_models/10x6_central_obstacle.dae"/>
        <param name="CAD_3_color" value="[0.92, 0.96, 0.96]"/>
	            
	            
        # Plot 3D OccupancyGridmap
        <param name="occupancy3D_data" value="$(find-pkg-share test_env)/$(var scenario)/OccupancyGrid3D.csv" />

        # Plot gas sources
        <param name="number_of_sources" value="1"/>
        <param name="source_0_position_x" value="$(var source_location_x)"/>
        <param name="source_0_position_y" value="$(var source_location_y)"/>
        <param name="source_0_position_z" value="$(var source_location_z)"/>

        <param name="source_0_scale" value="0.2"/>
        <param name="source_0_color" value="[0.0, 1.0, 0.0] "/>
    </node>
          
    
    ### NODE PLAYER ###
    #-------------------
    <node pkg="gaden_player" exec="player" name="gaden_player" output="screen">
        <param name="verbose" value="false" />
	    <param name="player_freq" value="2.0" />         ###(Hz) Freq for loading the simulation log_files
	    <param name="initial_iteration" value="0" />
	    <param name="num_simulators" value="1" />      ### Number of simulations to load [1-inf] (useful for multiple sources and gases)
    
        # Data from the "filament_simulator" pkg. Multiple sources can be set here
        <param name="simulation_data_0" value="$(find-pkg-share test_env)/$(var scenario)/gas_simulations/$(var simulation)/FilamentSimulation_gasType_0_sourcePosition_$(var source_location_x)_$(var source_location_y)_$(var source_location_z)" />
        
        <param name="occupancyFile" value="$(find-pkg-share test_env)/$(var scenario)/OccupancyGrid3D.csv" />

        # Loop options        
        <param name="allow_looping" value="true" />
        <param name="loop_from_iteration" value="15" />
        <param name="loop_to_iteration" value="24" />
        
    </node>
   
        
   
   <!--
    ### NODE Simulated Gas Sensor ###
    # SENSOR MODELS: 
    # MOX: TGS2620=0, TGS2600=1, TGS2611=2
    # PID: MiniRaeLite=30
    <node pkg="tf2_ros" exec="static_transform_publisher" name="mox0_broadcaster" args="3.0 3.0 0.4 0 0 0 map mox0_frame 100" />
    <node pkg="tf2_ros" exec="static_transform_publisher" name="mox1_broadcaster" args="3.0 3.0 0.4 0 0 0 map mox1_frame 100" />
    <node pkg="tf2_ros" exec="static_transform_publisher" name="mox2_broadcaster" args="3.0 3.0 0.4 0 0 0 map mox2_frame 100" />
    <node pkg="tf2_ros" exec="static_transform_publisher" name="pid_broadcaster" args="3.0 3.0 0.4 0 0 0 map pid_frame 100" />

    <node pkg="simulated_gas_sensor" exec="simulated_gas_sensor" name="fake_mox0" output="screen">
        <param name="/sensor_model" value="0" />
        <param name="/sensor_frame" value="mox0_frame" />
        <param name="/fixed_frame" value="map"/>
    </node>        
    
    <node pkg="simulated_gas_sensor" exec="simulated_gas_sensor" name="fake_mox1" output="screen">
        <param name="/sensor_model" value="1" />
        <param name="/sensor_frame" value="mox1_frame" />
        <param name="/fixed_frame" value="map"/>	        
    </node>

    <node pkg="simulated_gas_sensor" exec="simulated_gas_sensor" name="fake_mox2" output="screen">
        <param name="/sensor_model" value="2" />
        <param name="/sensor_frame" value="mox2_frame" />
        <param name="/fixed_frame" value="map"/>	        
    </node>
    

    <node pkg="simulated_gas_sensor" exec="simulated_gas_sensor" name="fake_pid" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="pid_frame" />
        <param name="/fixed_frame" value="map"/>	        
    </node>
    
  -->

    ### NODE Simulated Wind Sensor ###

    <node pkg="tf2_ros" exec="static_transform_publisher" name="anemometer_broadcaster" args="3.0 3.0 0.4 0.0 0.0 0.0 map anemometer_frame" />   
    <node pkg="simulated_anemometer" exec="simulated_anemometer" name="fake_anemometer" output="screen">	        
      <param name="sensor_frame" value="anemometer_frame" />
      <param name="fixed_frame" value="map"/>
      <param name="noise_std" value="0.1"/>
      <param name="use_map_ref_system" value="false"/>
    </node>

    ### RVIZ ###
    <node name="rviz" pkg="rviz2" exec="rviz2" args="-d $(find-pkg-share test_env)/$(var scenario)/launch/ros/gaden.rviz"/>
</launch>
