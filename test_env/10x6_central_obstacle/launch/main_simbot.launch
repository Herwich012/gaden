<!--
################################################################
#                                                              #
#		ROS simmulation for Mobile Robot Olfaction                 #
#                           							                     #
################################################################
-->

<launch>
    <arg name="scenario" default="10x6_central_obstacle" />
    <arg name="simulation" default="05ms" />
    <arg name="source_location_x" default="0.50" />
    <arg name="source_location_y" default="3.00" />
    <arg name="source_location_z" default="0.50" />

        ### ROBOT SIMULATION ###
    <param name="use_sim_time" value="true" />

    ### URDF MODEL ###
    <param name="robot_description" textfile="$(find-share-pkg test_env)/$(var scenario)/launch/ros/giraff.urdf" />
    <param name="use_gui" value="False"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" exec="state_publisher" />

    ### NAVIGATION ###
    <node name="map_server" pkg="nav2_map_server" exec="map_server" args="$(find-pkg-share test_env)/$(var scenario)/occupancy.yaml">
      <param name="frame_id" value="map"/>
    </node>  

    <include file="$(find-share-pkg test_env)/$(var scenario)/launch/ros/simbot_move_base.launch" />  
    
    <node pkg="fake_localization" exec="fake_localization" name="fake_localization">	    
        <param name="odom_frame_id" value="odom"/>
        <param name="global_frame_id" value="map"/>
        <param name="base_frame_id" value="base_link"/>
    </node>

    ### RVIZ ###
    <node name="rviz_player" pkg="rviz" exec="rviz" args="-d $(find-share-pkg test_env)/$(var scenario)/launch/ros/gaden.rviz"/>
  
# ===================== GADEN =====================================

     ### NODE environment (for RVIZ visualization) ###
    <!--node pkg="gaden_environment" exec="environment" name="environment" output="screen">
        <param name="verbose" value="false"/>
        <param name="wait_preprocessing" value="false"/>    	  ### wait for the ok from gaden_preprocessing before running
        <param name="fixed_frame" value="map"/>

        # Plot CAD models (Collada format .dae)
        <param name="number_of_CAD" value="3"/>
        <rosparam subst_value="True">
            CAD_0: package://test_env/$(var scenario)/cad_models/10x6_walls.dae
            CAD_0_color: [0.32, 0.36, 0.36]
            CAD_1: package://test_env/$(var scenario)/cad_models/10x6_door_left.dae
            CAD_1_color: [1, 0, 0]
            CAD_2: package://test_env/$(var scenario)/cad_models/10x6_door_right.dae
            CAD_2_color: [1, 0, 0]
        </rosparam>
	            
        # Plot 3D OccupancyGridmap
        <param name="occupancy3D_data" value="$(find-share-pkg test_env)/$(var scenario)/OccupancyGrid3D.csv" />

        # Plot gas sources
        <param name="number_of_sources" value="1"/>
        <param name="source_0_position_x" value="$(var source_location_x)"/>
        <param name="source_0_position_y" value="$(var source_location_y)"/>
        <param name="source_0_position_z" value="$(var source_location_z)"/>
        <rosparam>
            source_0_scale: 0.2
            source_0_color: [0.0, 1.0, 0.0] 
        </rosparam>
    </node>
          
    
    ### NODE PLAYER ###
    <node pkg="gaden_player" exec="gaden_player" name="gaden_player" output="screen">
        <param name="verbose" value="false" />
	    <param name="player_freq" value="2" />         ###(Hz) Freq for loading the simulation log_files
	    <param name="initial_iteration" value="0" />
	    <param name="num_simulators" value="1" />      ### Number of simulations to load [1-inf] (useful for multiple sources and gases)
    
        # Data from the "filament_simulator" pkg. Multiple sources can be set here
        <param name="simulation_data_0" value="$(find-share-pkg test_env)/$(var scenario)/gas_simulations/$(var simulation)/FilamentSimulation_gasType_0_sourcePosition_$(var source_location_x)_$(var source_location_y)_$(var source_location_z)" />
        
        <param name="occupancyFile" value="$(find-share-pkg test_env)/$(var scenario)/OccupancyGrid3D.csv" />

        # Loop options        
        <param name="allow_looping" value="true" />
        <param name="loop_from_iteration" value="15" />
        <param name="loop_to_iteration" value="24" />
        
    </node>
  
  
  ### SENSOR SIMULATION ###
  # SENSOR MODELS: 
  # MOX: TGS2620=0, TGS2600=1, TGS2611=2
  # PID: MiniRaeLite=30
  # Sensors are simulated onboad the robot
  
  <group ns="PID">
    <node pkg="simulated_gas_sensor" exec="simulated_gas_sensor" name="fake_pid" output="screen">
        <param name="/sensor_model" value="30" />
        <param name="/sensor_frame" value="pid_frame" />
        <param name="/fixed_frame" value="map"/>
        <param name="/noise_std" value="20.1"/>
    </node>
  </group>
  <node pkg="tf" exec="static_transform_publisher" name="pid_broadcaster" args="0.0 0.0 0.5 0 0 0 base_link pid_frame 100" />  

  <group ns="Anemometer">
    <node pkg="simulated_anemometer" exec="simulated_anemometer" name="fake_anemometer" output="screen">	        
      <param name="/sensor_frame" value="anemometer_frame" />
      <param name="/fixed_frame" value="map"/>
      <param name="/noise_std" value="0.3"/>
      <param name="/use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" exec="static_transform_publisher" name="anemometer_broadcaster" args="0.0 0.0 0.5 0 0 0 base_link anemometer_frame 100" /-->
</launch>
